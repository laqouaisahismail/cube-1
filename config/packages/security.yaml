security:
    encoders :
        App\Entity\User :
            algorithm : bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database: 
            entity:
                class: App\Entity\User
                property: email
        in_session: 
            entity:
                class: App\Entity\User
                property: apiToken

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: in_database

            form_login:
                login_path: security_login
                check_path: security_login

            logout:
                path: /logout
                #target: securtity_logout
            

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
        
        api: 
            pattern: ^/flutter/
            anonymous: lazy
            provider: in_session

            json_login:
                check_path: /flutter/signin
                username_path: email
                password_path: password

            logout:
                path: /flutter/signout
                target: /
                invalidate_session: true

            guard:
                authenticators:
                    - App\Security\TokenAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:   
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }

